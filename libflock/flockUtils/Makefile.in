# Makefile.in generated by automake 1.6.3 from Makefile.am.
# @configure_input@

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@
SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_HEADER = $(INSTALL_DATA)
transform = @program_transform_name@
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_alias = @host_alias@
host_triplet = @host@

EXEEXT = @EXEEXT@
OBJEXT = @OBJEXT@
PATH_SEPARATOR = @PATH_SEPARATOR@
AMTAR = @AMTAR@
AR = @AR@
AS = @AS@
AWK = @AWK@
CC = @CC@
CPP = @CPP@
CXX = @CXX@
CXXCPP = @CXXCPP@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
ECHO = @ECHO@
EGREP = @EGREP@
F77 = @F77@
GCJ = @GCJ@
GCJFLAGS = @GCJFLAGS@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
OBJDUMP = @OBJDUMP@
PACKAGE = @PACKAGE@
RANLIB = @RANLIB@
RC = @RC@
STRIP = @STRIP@
VERSION = @VERSION@
am__include = @am__include@
am__quote = @am__quote@
install_sh = @install_sh@
INCLUDES = -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include/ -I/usr/X11R6/include
CFLAGS = -L/usr/X11R6/lib

bin_PROGRAMS = flockOutput flockNoise flockMoves flockBumps \
               flockSpeed flockOSC netBump2Sound flockOSC_seb \
               flockVisu flockOSC_vinc


flockOutput_SOURCES = flockOutput.c
flockOutput_LDADD = ../flock/libflock.la

flockNoise_SOURCES = flockNoise.c
flockNoise_LDADD = ../flock/libflock.la
flockNoise_LDFLAGS = -lm

flockMoves_SOURCES = flockMoves.c
flockMoves_LDADD = ../flock/libflock.la

flockBumps_SOURCES = flockBumps.c
flockBumps_LDADD = ../flock/libflock.la

flockSpeed_SOURCES = flockSpeed.c
flockSpeed_LDADD = ../flock/libflock.la

flockOSC_SOURCES = flockOSC.c OSC.c OSC.h
flockOSC_LDADD = ../flock/libflock.la
flockOSC_LDFLAGS = -lm

netBump2Sound_SOURCES = netBump2Sound.c

flockOSC_seb_SOURCES = flockOSC_seb.c OSC.c OSC.h
flockOSC_seb_LDADD = ../flock/libflock.la
flockOSC_seb_LDFLAGS = -lm -lglib-2.0

flockOSC_vinc_SOURCES = flockOSC_vinc.c OSC.c OSC.h
flockOSC_vinc_LDADD = ../flock/libflock.la
flockOSC_vinc_LDFLAGS = -lm -lglib-2.0
flockVisu_SOURCES = flockVisu.c

#flockVisu_CFLAGS = -L/usr/X11R6/lib #-I/usr/X11R6/include
flockVisu_LDFLAGS = -lglut -lGLU -lGL -lm -lXmu -lglib-2.0 #-L/usr/X11R6/lib
subdir = flockUtils
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
bin_PROGRAMS = flockOutput$(EXEEXT) flockNoise$(EXEEXT) \
	flockMoves$(EXEEXT) flockBumps$(EXEEXT) flockSpeed$(EXEEXT) \
	flockOSC$(EXEEXT) netBump2Sound$(EXEEXT) flockOSC_seb$(EXEEXT) \
	flockVisu$(EXEEXT) flockOSC_vinc$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS)

am_flockBumps_OBJECTS = flockBumps.$(OBJEXT)
flockBumps_OBJECTS = $(am_flockBumps_OBJECTS)
flockBumps_DEPENDENCIES = ../flock/libflock.la
flockBumps_LDFLAGS =
am_flockMoves_OBJECTS = flockMoves.$(OBJEXT)
flockMoves_OBJECTS = $(am_flockMoves_OBJECTS)
flockMoves_DEPENDENCIES = ../flock/libflock.la
flockMoves_LDFLAGS =
am_flockNoise_OBJECTS = flockNoise.$(OBJEXT)
flockNoise_OBJECTS = $(am_flockNoise_OBJECTS)
flockNoise_DEPENDENCIES = ../flock/libflock.la
am_flockOSC_OBJECTS = flockOSC.$(OBJEXT) OSC.$(OBJEXT)
flockOSC_OBJECTS = $(am_flockOSC_OBJECTS)
flockOSC_DEPENDENCIES = ../flock/libflock.la
am_flockOSC_seb_OBJECTS = flockOSC_seb.$(OBJEXT) OSC.$(OBJEXT)
flockOSC_seb_OBJECTS = $(am_flockOSC_seb_OBJECTS)
flockOSC_seb_DEPENDENCIES = ../flock/libflock.la
am_flockOSC_vinc_OBJECTS = flockOSC_vinc.$(OBJEXT) OSC.$(OBJEXT)
flockOSC_vinc_OBJECTS = $(am_flockOSC_vinc_OBJECTS)
flockOSC_vinc_DEPENDENCIES = ../flock/libflock.la
am_flockOutput_OBJECTS = flockOutput.$(OBJEXT)
flockOutput_OBJECTS = $(am_flockOutput_OBJECTS)
flockOutput_DEPENDENCIES = ../flock/libflock.la
flockOutput_LDFLAGS =
am_flockSpeed_OBJECTS = flockSpeed.$(OBJEXT)
flockSpeed_OBJECTS = $(am_flockSpeed_OBJECTS)
flockSpeed_DEPENDENCIES = ../flock/libflock.la
flockSpeed_LDFLAGS =
am_flockVisu_OBJECTS = flockVisu.$(OBJEXT)
flockVisu_OBJECTS = $(am_flockVisu_OBJECTS)
flockVisu_LDADD = $(LDADD)
flockVisu_DEPENDENCIES =
am_netBump2Sound_OBJECTS = netBump2Sound.$(OBJEXT)
netBump2Sound_OBJECTS = $(am_netBump2Sound_OBJECTS)
netBump2Sound_LDADD = $(LDADD)
netBump2Sound_DEPENDENCIES =
netBump2Sound_LDFLAGS =

DEFS = @DEFS@
DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
@AMDEP_TRUE@DEP_FILES = ./$(DEPDIR)/OSC.Po ./$(DEPDIR)/flockBumps.Po \
@AMDEP_TRUE@	./$(DEPDIR)/flockMoves.Po ./$(DEPDIR)/flockNoise.Po \
@AMDEP_TRUE@	./$(DEPDIR)/flockOSC.Po ./$(DEPDIR)/flockOSC_seb.Po \
@AMDEP_TRUE@	./$(DEPDIR)/flockOSC_vinc.Po \
@AMDEP_TRUE@	./$(DEPDIR)/flockOutput.Po \
@AMDEP_TRUE@	./$(DEPDIR)/flockSpeed.Po ./$(DEPDIR)/flockVisu.Po \
@AMDEP_TRUE@	./$(DEPDIR)/netBump2Sound.Po
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) \
	$(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
DIST_SOURCES = $(flockBumps_SOURCES) $(flockMoves_SOURCES) \
	$(flockNoise_SOURCES) $(flockOSC_SOURCES) \
	$(flockOSC_seb_SOURCES) $(flockOSC_vinc_SOURCES) \
	$(flockOutput_SOURCES) $(flockSpeed_SOURCES) \
	$(flockVisu_SOURCES) $(netBump2Sound_SOURCES)
DIST_COMMON = Makefile.am Makefile.in
SOURCES = $(flockBumps_SOURCES) $(flockMoves_SOURCES) $(flockNoise_SOURCES) $(flockOSC_SOURCES) $(flockOSC_seb_SOURCES) $(flockOSC_vinc_SOURCES) $(flockOutput_SOURCES) $(flockSpeed_SOURCES) $(flockVisu_SOURCES) $(netBump2Sound_SOURCES)

all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.in $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  flockUtils/Makefile
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f $(DESTDIR)$(bindir)/$$f"; \
	  rm -f $(DESTDIR)$(bindir)/$$f; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
flockBumps$(EXEEXT): $(flockBumps_OBJECTS) $(flockBumps_DEPENDENCIES) 
	@rm -f flockBumps$(EXEEXT)
	$(LINK) $(flockBumps_LDFLAGS) $(flockBumps_OBJECTS) $(flockBumps_LDADD) $(LIBS)
flockMoves$(EXEEXT): $(flockMoves_OBJECTS) $(flockMoves_DEPENDENCIES) 
	@rm -f flockMoves$(EXEEXT)
	$(LINK) $(flockMoves_LDFLAGS) $(flockMoves_OBJECTS) $(flockMoves_LDADD) $(LIBS)
flockNoise$(EXEEXT): $(flockNoise_OBJECTS) $(flockNoise_DEPENDENCIES) 
	@rm -f flockNoise$(EXEEXT)
	$(LINK) $(flockNoise_LDFLAGS) $(flockNoise_OBJECTS) $(flockNoise_LDADD) $(LIBS)
flockOSC$(EXEEXT): $(flockOSC_OBJECTS) $(flockOSC_DEPENDENCIES) 
	@rm -f flockOSC$(EXEEXT)
	$(LINK) $(flockOSC_LDFLAGS) $(flockOSC_OBJECTS) $(flockOSC_LDADD) $(LIBS)
flockOSC_seb$(EXEEXT): $(flockOSC_seb_OBJECTS) $(flockOSC_seb_DEPENDENCIES) 
	@rm -f flockOSC_seb$(EXEEXT)
	$(LINK) $(flockOSC_seb_LDFLAGS) $(flockOSC_seb_OBJECTS) $(flockOSC_seb_LDADD) $(LIBS)
flockOSC_vinc$(EXEEXT): $(flockOSC_vinc_OBJECTS) $(flockOSC_vinc_DEPENDENCIES) 
	@rm -f flockOSC_vinc$(EXEEXT)
	$(LINK) $(flockOSC_vinc_LDFLAGS) $(flockOSC_vinc_OBJECTS) $(flockOSC_vinc_LDADD) $(LIBS)
flockOutput$(EXEEXT): $(flockOutput_OBJECTS) $(flockOutput_DEPENDENCIES) 
	@rm -f flockOutput$(EXEEXT)
	$(LINK) $(flockOutput_LDFLAGS) $(flockOutput_OBJECTS) $(flockOutput_LDADD) $(LIBS)
flockSpeed$(EXEEXT): $(flockSpeed_OBJECTS) $(flockSpeed_DEPENDENCIES) 
	@rm -f flockSpeed$(EXEEXT)
	$(LINK) $(flockSpeed_LDFLAGS) $(flockSpeed_OBJECTS) $(flockSpeed_LDADD) $(LIBS)
flockVisu$(EXEEXT): $(flockVisu_OBJECTS) $(flockVisu_DEPENDENCIES) 
	@rm -f flockVisu$(EXEEXT)
	$(LINK) $(flockVisu_LDFLAGS) $(flockVisu_OBJECTS) $(flockVisu_LDADD) $(LIBS)
netBump2Sound$(EXEEXT): $(netBump2Sound_OBJECTS) $(netBump2Sound_DEPENDENCIES) 
	@rm -f netBump2Sound$(EXEEXT)
	$(LINK) $(netBump2Sound_LDFLAGS) $(netBump2Sound_OBJECTS) $(netBump2Sound_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/OSC.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/flockBumps.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/flockMoves.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/flockNoise.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/flockOSC.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/flockOSC_seb.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/flockOSC_vinc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/flockOutput.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/flockSpeed.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/flockVisu.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/netBump2Sound.Po@am__quote@

distclean-depend:
	-rm -rf ./$(DEPDIR)

.c.o:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(COMPILE) -c `test -f '$<' || echo '$(srcdir)/'`$<

.c.obj:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(COMPILE) -c `cygpath -w $<`

.c.lo:
@AMDEP_TRUE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LTCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<
CCDEPMODE = @CCDEPMODE@

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

ETAGS = etags
ETAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@list='$(DISTFILES)'; for file in $$list; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)

installdirs:
	$(mkinstalldirs) $(DESTDIR)$(bindir)

install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am:

install-exec-am: install-binPROGRAMS

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

uninstall-am: uninstall-binPROGRAMS uninstall-info-am

.PHONY: GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libtool distclean distclean-compile \
	distclean-depend distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am info info-am install \
	install-am install-binPROGRAMS install-data install-data-am \
	install-exec install-exec-am install-info install-info-am \
	install-man install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool tags uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-info-am


# install-exec-local:
# 	chmod +s $(DESTDIR)$(bindir)/flockOutput
# 	chmod +s $(DESTDIR)$(bindir)/flockNoise
# 	chmod +s $(DESTDIR)$(bindir)/flockMoves
# 	chmod +s $(DESTDIR)$(bindir)/flockBumps
# 	chmod +s $(DESTDIR)$(bindir)/flockSpeed
# 	chmod +s $(DESTDIR)$(bindir)/flockOSC
# 	chmod +s $(DESTDIR)$(bindir)/flockOSC2
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
